# 1. 워크플로우의 이름 지정
name: Mingle Backend Build and Push

#2. 워크플로우가 시작될 조건 지정
on:
  push:
    branches:
      - main
      - dev
      - feature
      - feature2

# 해당 코드에서 사용될 변수 설정
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: mingle.bucket
  CODE_DEPLOY_APPLICATION_NAME: codeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: codeDeploy
#  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#  SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
#  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest # 3. 실행 환경 지정

    # 4. 실행 스텝 지정
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mingle-backend:latest

      # 빌드가 완료되면 슬랙으로 알림
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: www-be
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
